************************************************************************
* This file is part of OpenMolcas.                                     *
*                                                                      *
* OpenMolcas is free software; you can redistribute it and/or modify   *
* it under the terms of the GNU Lesser General Public License, v. 2.1. *
* OpenMolcas is distributed in the hope that it will be useful, but it *
* is provided "as is" and without any express or implied warranties.   *
* For more details see the full text of the license in the file        *
* LICENSE or in <http://www.gnu.org/licenses/>.                        *
*                                                                      *
* Copyright (C) 2013,2019, Ignacio Fdez. Galvan                        *
*               2016, Roland Lindh                                     *
************************************************************************
*
* Note! because of a bug in preprocessing of this file by some fortran
*       compilers the length of constant values should not be too long!
*
*  for example:
*    #define a My_constant1*(My_constant2+My_constant3+My_favourite_constant)
*  will probably fail in the code:
*    x=a+a+a
*  because preprocessor will create a very long line first!
*
* Also, note that
*    #define a b
*  is not the same as
*    #define a        b
*  in the second case after preprocessing you can easily get
*  a line which is longer than 72 characters !
*
************************************************************************
#ifndef _CONSTANTS_FH_
#define _CONSTANTS_FH_
************************************************************************
*                                                                      *
*              Physical constants and conversion factors               *
*                                                                      *
*----------------------------------------------------------------------*
*                                                                      *
* The constants and conversion factors in this header file are taken   *
* from NIST at URL http://http://physics.nist.gov/cuu/Constants,       *
* except where otherwise stated                                        *
* Source: Peter J. Mohr and Barry N. Taylor, CODATA Recommended Values *
* of the Fundamental Physical Constants: 2002, published in            *
* Rev. Mod. Phys.  vol. 77(1) 1-107 (2005).                            *
*                                                                      *
*  Update to the "2010 CODATA recommended values".  R. Lindh           *
*  Update to the "2014 CODATA recommended values".  I. Fdez. Galvan    *
*  Update to the "2018 CODATA recommended values".  I. Fdez. Galvan    *
*                                                                      *
*----------------------------------------------------------------------*
*                                                                      *
* Constants                                                            *
* ---------                                                            *
* CONST_AMU_IN_SI_ -- Atomic mass unit (1/12*m[C12]) in SI units.      *
* CONST_AU_TIME_IN_SI_ -- Atomic units time unit in SI units.          *
* CONST_AU_VELOCITY_IN_SI_ -- Atomic units velocity unit in SI units.  *
* CONST_MOLAR_GAS_ -- Molar gas constant in SI units.                  *
* CONST_AVOGADRO_ -- Avogadro's number in SI units.                    *
* CONST_BOLTZMANN_ -- the Boltzmann constant in SI units.              *
* CONST_BOHR_RADIUS_IN_SI_ -- Bohr radius in SI units.                 *
* CONST_C_IN_AU_ -- Speed of light in atomic units.                    *
* CONST_C_IN_SI_ -- Speed of light in SI units.                        *
* CONST_ELECTRON_MASS_IN_SI_ -- Mass of the electron in SI units.      *
* CONST_ELEMENTARY_CHARGE_IN_SI_ -- Elementary charge in SI units.     *
* CONST_PLANCK_ -- Planck's constant in SI units.                      *
* CONST_DIELECTRIC_IN_SI_ -- Electric constant (eps0) in SI units.     *
* CONST_ELECTRON_G_FACTOR_ -- Electron g-factor (dimensionless).       *
* CONST_BOHR_MAGNETON_IN_SI_ -- Bohr magneton in SI units.             *
* CONST_PI_ -- Just pi                                                 *
*                                                                      *
* Conversion factors                                                   *
* ------------------                                                   *
* CONV_AU_TO_EV_ -- Convert 1Eh to eV.                                 *
* CONV_AU_TO_CM1_ -- Convert 1Eh to cm-1.                              *
* CONV_AU_TO_KJ_ -- Convert 1Eh to kJ.                                 *
* CONV_AU_TO_HZ_ -- Convert 1Eh to Hz.                                 *
* CONV_AMU_TO_AU_ -- Convert 1AMU to au.                               *
* CONV_AU_TO_KJ_PER_MOLE_ -- Convert 1Eh to kJ/mol.                    *
* CONV_CAL_TO_J_ -- Convert 1cal to J.                                 *
* CONV_AU_TO_DEBYE -- Convert 1au to Debye.                            *
* CONV_AU_TO_T -- Convert 1au to Tesla.                                *
*                                                                      *
************************************************************************
*
* Select a set of physical constants, valid values are:
* 2010, 2014, 2018
*
#ifndef CODATA_SET
#define CODATA_SET 2018
#endif
*
* Constants
*
#if CODATA_SET == 2018
* CONST_AVOGADRO_, CONST_BOLTZMANN_, CONST_ELEMENTARY_CHARGE_IN_SI_, CONST_PLANCK_ are now exact
#  define CONST_AMU_IN_SI_ 1.66053906660d-27
#  define CONST_AU_TIME_IN_SI_ 2.4188843265857d-17
#  define CONST_AU_VELOCITY_IN_SI_ 2.18769126364d6
#  define CONST_AVOGADRO_ 6.02214076e23
#  define CONST_BOHR_RADIUS_IN_SI_ 0.529177210903d-10
#  define CONST_ELECTRON_MASS_IN_SI_ 9.1093837015d-31
#  define CONST_MUON_MASS_IN_SI_ 1.883531627d-28
#  define CONST_BOLTZMANN_ 1.380649d-23
#  define CONST_ELEMENTARY_CHARGE_IN_SI_ 1.602176634d-19
#  define CONST_PLANCK_ 6.62607015d-34
#  define CONST_DIELECTRIC_IN_SI_ 8.8541878128d-12
#  define CONST_ELECTRON_G_FACTOR_ -2.00231930436256
#  define CONST_BOHR_MAGNETON_IN_SI_ 9.2740100783d-24
#elif CODATA_SET == 2014
#  define CONST_AMU_IN_SI_ 1.660539040d-27
#  define CONST_AU_TIME_IN_SI_ 2.418884326509d-17
#  define CONST_AU_VELOCITY_IN_SI_ 2.18769126277d6
#  define CONST_AVOGADRO_ 6.022140857d23
#  define CONST_BOHR_RADIUS_IN_SI_ 0.52917721067d-10
#  define CONST_ELECTRON_MASS_IN_SI_ 9.10938356d-31
#  define CONST_MUON_MASS_IN_SI_ 1.883531594d-28
#  define CONST_MOLAR_GAS_ 8.3144598d-0
#  define CONST_ELEMENTARY_CHARGE_IN_SI_ 1.6021766208d-19
#  define CONST_PLANCK_ 6.626070040d-34
#  define CONST_DIELECTRIC_IN_SI_ 8.854187817d-12
#  define CONST_ELECTRON_G_FACTOR_ -2.00231930436182
#  define CONST_BOHR_MAGNETON_IN_SI_ 9.274009994d-24
#elif CODATA_SET == 2010
#  define CONST_AMU_IN_SI_ 1.660538921d-27
#  define CONST_AU_TIME_IN_SI_ 2.418884326502d-17
#  define CONST_AU_VELOCITY_IN_SI_ 2.18769126379d6
#  define CONST_AVOGADRO_ 6.02214129d23
#  define CONST_BOHR_RADIUS_IN_SI_ 0.52917721092d-10
#  define CONST_ELECTRON_MASS_IN_SI_ 9.10938291d-31
#  define CONST_MUON_MASS_IN_SI_ 1.883531475d-28
#  define CONST_MOLAR_GAS_ 8.3144621d-0
#  define CONST_ELEMENTARY_CHARGE_IN_SI_ 1.602176565d-19
#  define CONST_PLANCK_ 6.62606957d-34
#  define CONST_DIELECTRIC_IN_SI_ 8.85418782d-12
#  define CONST_ELECTRON_G_FACTOR_ -2.00231930436153
#  define CONST_BOHR_MAGNETON_IN_SI_ 9.27400968d-24
#endif
#define CONST_C_IN_SI_ 2.99792458d8
#define CONST_PI_ 3.141592653589793d0
*
* Derived constants
*
#define CONST_C_IN_AU_ (CONST_C_IN_SI_/CONST_AU_VELOCITY_IN_SI_)
#if CODATA_SET >= 2018
#  define CONST_MOLAR_GAS_ (CONST_AVOGADRO_*CONST_BOLTZMANN_)
#else
#  define CONST_BOLTZMANN_ (CONST_MOLAR_GAS_/CONST_AVOGADRO_)
#endif
#define CONST_DIPOLE_IN_SI_ (CONST_ELEMENTARY_CHARGE_IN_SI_*CONST_BOHR_RADIUS_IN_SI_)
#define CONST_DIPOLE_IN_ESU_ (1.0D-21/CONST_C_IN_SI_)
*
* Conversion factors
*
#if CODATA_SET == 2018
#  define CONV_AU_TO_EV_ 27.211386245988d0
#  define CONV_AU_TO_CM1_ 2.1947463136320d5
#  define CONV_AU_TO_KJ_ 4.3597447222071d-21
#  define CONV_AU_TO_HZ_ 6.579683920502d15
#  define CONV_AU_TO_T_ 2.35051756758d5
#elif CODATA_SET == 2014
#  define CONV_AU_TO_EV_ 27.21138602d0
#  define CONV_AU_TO_CM1_ 2.194746313702d5
#  define CONV_AU_TO_KJ_ 4.359744650d-21
#  define CONV_AU_TO_HZ_ 6.579683920711d15
#  define CONV_AU_TO_T_ 2.350517550d5
#elif CODATA_SET == 2010
#  define CONV_AU_TO_EV_ 27.21138505d0
#  define CONV_AU_TO_CM1_ 2.194746313708d5
#  define CONV_AU_TO_KJ_ 4.35974434d-21
#  define CONV_AU_TO_HZ_ 6.579683920729d15
#  define CONV_AU_TO_T_ 2.350517464d5
#endif
#define CONV_CAL_TO_J_ 4.184d0
#define CONV_AU_TO_DEBYE_ (CONST_DIPOLE_IN_SI_*CONST_C_IN_SI_*1.0D21)
*
* Derived conversion factors
*
#define CONV_AMU_TO_AU_ (CONST_AMU_IN_SI_/CONST_ELECTRON_MASS_IN_SI_)
#define CONV_AU_TO_KJ_PER_MOLE_ (CONST_AVOGADRO_*CONV_AU_TO_KJ_)
*
* Done
*
#endif
